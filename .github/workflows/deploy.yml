name: Deploy to Hostinger
run-name: ${{ github.actor }} is running the CI/CD üöÄ

on:
  push:
    branches:
      - main


jobs:
  # 1) AUDIT
  audit:
    name: "Audit Dependencies"
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Audit
        run: npm audit

 # 2) TEST E2E (avec matrice)
  test_e2e:
    name: "E2E Tests"
    runs-on: ubuntu-latest
    needs: [audit]
    strategy:
      matrix:
        browser: [chrome, edge]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      env:
        CLIENT_ID: ${{ secrets.APP_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      # Ici, on laisse Cypress Action g√©rer le "start" et le "wait-on" :
      - name: Run Cypress E2E tests on ${{ matrix.browser }}
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ matrix.browser }}
          start: npm start
          wait-on: http://localhost:8000
          wait-on-timeout: 60
          config: baseUrl=http://localhost:8000


  # 3) DEPLOY (d√©pend des tests e2e)
  deploy:
    name: "Deploy to Hostinger"
    runs-on: ubuntu-latest
    needs: [test_e2e]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci


      - name: Deploy to Hostinger
        uses: easingthemes/ssh-deploy@v2.1.5
        with:
          source: "public/"
          target: ${{ secrets.HOSTINGER_TARGET }}
          # IP / domaine SSH
          remote_host: ${{ secrets.HOSTINGER_HOST }}
          # Utilisateur SSH
          remote_user: ${{ secrets.HOSTINGER_USER }}
          # Cl√© SSH priv√©e
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Port SSH (22 par d√©faut). Si Hostinger te donne un autre port, param√®tre-le :
          remote_port: ${{ secrets.HOSTINGER_REMOTE_PORT }}
          # Options rsync, --delete pour supprimer les anciens fichiers c√¥t√© serveur
          args: "-rltgoDzvO --delete"
